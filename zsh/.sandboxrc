#!/bin/bash

sandbox_init_nvm(){
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion

  autoload -U add-zsh-hook
  load-nvmrc() {
      local node_version="$(nvm version)"
      local nvmrc_path="$(nvm_find_nvmrc)"

      if [ -n "$nvmrc_path" ]; then
          local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

          if [ "$nvmrc_node_version" = "N/A" ]; then
              nvm install
          elif [ "$nvmrc_node_version" != "$node_version" ]; then
              nvm use
          fi
      elif [ "$node_version" != "$(nvm version default)" ]; then
          echo "Reverting to nvm default version"
          nvm use default
      fi
  }
  add-zsh-hook chpwd load-nvmrc
  load-nvmrc
}

# sandbox_init_rvm(){
#   if test -f ~/.rvm/scripts/rvm; then
#      [ "$(type rvm | grep -o function)" = "function" ] || source ~/.rvm/scripts/rvm
#   fi
# }

# sandbox_init_python(){
#   source /usr/local/bin/virtualenvwrapper.sh
# }

# sandbox_hook python workon
# sandbox_hook python mkvirtualenv

sandbox_hook nvm node
sandbox_hook nvm nodemon
sandbox_hook nvm lein
sandbox_hook nvm cljs
